//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.12.01 at 02:23:12 PM IST 
//

package mila.generated.impl;

public class NumeralLexiconTypeImpl implements mila.generated.NumeralLexiconType,
		com.sun.xml.bind.JAXBObject,
		mila.generated.impl.runtime.UnmarshallableObject,
		mila.generated.impl.runtime.XMLSerializable,
		mila.generated.impl.runtime.ValidatableObject {

	public static class AddImpl extends mila.generated.impl.NumeralExceptionTypeImpl
			implements mila.generated.NumeralLexiconType.Add,
			com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject,
			mila.generated.impl.runtime.UnmarshallableObject,
			mila.generated.impl.runtime.XMLSerializable,
			mila.generated.impl.runtime.ValidatableObject {

		public class Unmarshaller extends
				mila.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

			public Unmarshaller(
					mila.generated.impl.runtime.UnmarshallingContext context) {
				super(context, "----");
			}

			protected Unmarshaller(
					mila.generated.impl.runtime.UnmarshallingContext context,
					int startState) {
				this(context);
				state = startState;
			}

			@Override
			public void enterAttribute(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 3:
						revertToParentFromEnterAttribute(___uri, ___local,
								___qname);
						return;
					case 1:
						if (("construct" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("definiteness" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("dotted" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("gender" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("inflectConstruct" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("number" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("pgn" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("script" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("transliterated" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						break;
					}
					super.enterAttribute(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public void enterElement(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname,
					org.xml.sax.Attributes __atts)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 3:
						revertToParentFromEnterElement(___uri, ___local,
								___qname, __atts);
						return;
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						break;
					case 0:
						if (("add" == ___local) && ("" == ___uri)) {
							context.pushAttributes(__atts, true);
							state = 1;
							return;
						}
						break;
					}
					super.enterElement(___uri, ___local, ___qname, __atts);
					break;
				}
			}

			@Override
			public void handleText(final java.lang.String value)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					try {
						switch (state) {
						case 3:
							revertToParentFromText(value);
							return;
						case 1:
							attIdx = context.getAttribute("", "construct");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "definiteness");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "dotted");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "gender");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("",
									"inflectConstruct");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "number");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "pgn");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "script");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "transliterated");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							break;
						}
					} catch (java.lang.RuntimeException e) {
						handleUnexpectedTextException(value, e);
					}
					break;
				}
			}

			@Override
			public void leaveAttribute(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 3:
						revertToParentFromLeaveAttribute(___uri, ___local,
								___qname);
						return;
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						break;
					}
					super.leaveAttribute(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public void leaveElement(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 2:
						if (("add" == ___local) && ("" == ___uri)) {
							context.popAttributes();
							state = 3;
							return;
						}
						break;
					case 3:
						revertToParentFromLeaveElement(___uri, ___local,
								___qname);
						return;
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						break;
					}
					super.leaveElement(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public java.lang.Object owner() {
				return mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.this;
			}

		}

		public final static java.lang.Class version = (mila.generated.impl.JAXBVersion.class);

		private static com.sun.msv.grammar.Grammar schemaFragment;

		private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
			return (mila.generated.NumeralLexiconType.Add.class);
		}

		@Override
		public java.lang.String ____jaxb_ri____getLocalName() {
			return "add";
		}

		@Override
		public java.lang.String ____jaxb_ri____getNamespaceURI() {
			return "";
		}

		@Override
		public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
			if (schemaFragment == null) {
				schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
						.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
								+ "\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
								+ "grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
								+ "\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
								+ "msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
								+ "ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
								+ "mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
								+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
								+ "q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
								+ "\u0007ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/re"
								+ "laxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv"
								+ "/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.TokenT"
								+ "ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
								+ "\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
								+ "icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
								+ "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
								+ "\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwh"
								+ "iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
								+ "\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.da"
								+ "tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.su"
								+ "n.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com."
								+ "sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
								+ "\u0004ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
								+ "\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sr\u0000\u001dcom.sun.msv.grammar.Ch"
								+ "oiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeE"
								+ "xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang"
								+ ".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0014ppsr\u0000)com.sun.msv.datat"
								+ "ype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Se"
								+ "t;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFa"
								+ "cet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet"
								+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000"
								+ ")Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'"
								+ "Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001dxq\u0000~"
								+ "\u0000\u001ct\u0000\u0000t\u0000\u000eThreeStateTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001ft\u0000\u000benumerationsr\u0000\u0011jav"
								+ "a.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u000bunspecifiedt\u0000\u0004tr"
								+ "uet\u0000\u0005falsexq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u00008q\u0000~\u00007sr\u0000#com.sun.msv.grammar.Simp"
								+ "leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dx"
								+ "r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tconstructq\u0000~"
								+ "\u00007sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
								+ "\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000-\u0001q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~"
								+ "\u00007t\u0000\u000fDefinitnessTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000"
								+ "\u0000\u0005t\u0000\nprohibitedt\u0000\boptionalt\u0000\brequiredt\u0000\bexternalt\u0000\binternalx"
								+ "q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000Kq\u0000~\u00007sq\u0000~\u0000@t\u0000\fdefinitenessq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)pp"
								+ "sq\u0000~\u0000+q\u0000~\u0000.pq\u0000~\u0000\u0017sq\u0000~\u0000@t\u0000\u0006dottedq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000"
								+ ".psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nGenderTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~"
								+ "\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bfemininet\u0000\u0016masculine and fe"
								+ "mininet\u0000\tmasculinexq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000]q\u0000~\u00007sq\u0000~\u0000@t\u0000\u0006genderq\u0000~\u00007"
								+ "q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsr\u0000$com.sun.msv.datatype.xs"
								+ "d.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007booleanq\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000"
								+ "\'q\u0000~\u0000kq\u0000~\u0000 sq\u0000~\u0000@t\u0000\u0010inflectConstructq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+"
								+ "q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nNumberTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009"
								+ "sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0013singular and pluralt\u0000\u0004d"
								+ "ualt\u0000\u000fdual and pluralt\u0000\bsingulart\u0000\u0006pluralxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000sq\u0000"
								+ "~\u00007sq\u0000~\u0000@t\u0000\u0006numberq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~"
								+ "\u00000q\u0000~\u00007t\u0000\u0007PGNTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u0013t"
								+ "\u0000\t123p/M/Sgt\u0000\u00072p/M/Plt\u0000\u00073p/M/Sgt\u0000\b1p/MF/Sgt\u0000\t123p/M/Plt\u0000\b2p/"
								+ "MF/Plt\u0000\u00072p/M/Sgt\u0000\u00071p/F/Sgt\u0000\b3p/MF/Plt\u0000\u00073p/F/Plt\u0000\u00071p/M/Sgt\u0000\u000bu"
								+ "nspecifiedt\u0000\u00072p/F/Plt\u0000\t123p/F/Plt\u0000\u00073p/M/Plt\u0000\u00073p/F/Sgt\u0000\t123p/"
								+ "F/Sgt\u0000\b1p/MF/Plt\u0000\u00072p/F/Sgxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u0082q\u0000~\u00007sq\u0000~\u0000@t\u0000\u0003pgnq"
								+ "\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nScriptTyp"
								+ "eq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0004typot\u0000\u0006formalt"
								+ "\u0000\u0005slangt\u0000\ncolloquialxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u009eq\u0000~\u00007sq\u0000~\u0000@t\u0000\u0006scriptq\u0000~"
								+ "\u00007q\u0000~\u0000Esq\u0000~\u0000+ppq\u0000~\u0000\u0017sq\u0000~\u0000@t\u0000\u000etransliteratedq\u0000~\u00007sq\u0000~\u0000+ppq\u0000~\u0000"
								+ "\u0017sq\u0000~\u0000@t\u0000\bundottedq\u0000~\u00007sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsr\u0000\"com.s"
								+ "un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNameq"
								+ "\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u00b2q\u0000~\u0000 sq\u0000~\u0000@t\u0000\u0004typet\u0000)http://www.w3.org/2"
								+ "001/XMLSchema-instanceq\u0000~\u0000Esq\u0000~\u0000@t\u0000\u0003addq\u0000~\u00007sr\u0000\"com.sun.msv."
								+ "grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
								+ "grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
								+ "ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
								+ "L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq\u0000~\u0000"
								+ "\u00adq\u0000~\u0000Gq\u0000~\u0000~q\u0000~\u0000\u000bq\u0000~\u0000\u000eq\u0000~\u0000\nq\u0000~\u0000fq\u0000~\u0000\u000fq\u0000~\u0000Uq\u0000~\u0000\u0010q\u0000~\u0000Yq\u0000~\u0000\u0013q\u0000~\u0000"
								+ "\u0012q\u0000~\u0000\u009aq\u0000~\u0000oq\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000\rq\u0000~\u0000\u0011q\u0000~\u0000*x"));
			}
			return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
					schemaFragment);
		}

		@Override
		public mila.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
				mila.generated.impl.runtime.UnmarshallingContext context) {
			return new mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.Unmarshaller(
					context);
		}

		@Override
		public java.lang.Class getPrimaryInterface() {
			return (mila.generated.NumeralLexiconType.Add.class);
		}

		@Override
		public void serializeAttributes(
				mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
		}

		@Override
		public void serializeBody(mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
			context.startElement("", "add");
			super.serializeURIs(context);
			context.endNamespaceDecls();
			super.serializeAttributes(context);
			context.endAttributes();
			super.serializeBody(context);
			context.endElement();
		}

		@Override
		public void serializeURIs(mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
		}

	}

	public static class RemoveImpl extends
			mila.generated.impl.NumeralExceptionTypeImpl implements
			mila.generated.NumeralLexiconType.Remove, com.sun.xml.bind.RIElement,
			com.sun.xml.bind.JAXBObject,
			mila.generated.impl.runtime.UnmarshallableObject,
			mila.generated.impl.runtime.XMLSerializable,
			mila.generated.impl.runtime.ValidatableObject {

		public class Unmarshaller extends
				mila.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

			public Unmarshaller(
					mila.generated.impl.runtime.UnmarshallingContext context) {
				super(context, "----");
			}

			protected Unmarshaller(
					mila.generated.impl.runtime.UnmarshallingContext context,
					int startState) {
				this(context);
				state = startState;
			}

			@Override
			public void enterAttribute(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						if (("construct" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("definiteness" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("dotted" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("gender" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("inflectConstruct" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("number" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("pgn" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("script" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("transliterated" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						break;
					case 3:
						revertToParentFromEnterAttribute(___uri, ___local,
								___qname);
						return;
					}
					super.enterAttribute(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public void enterElement(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname,
					org.xml.sax.Attributes __atts)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						break;
					case 3:
						revertToParentFromEnterElement(___uri, ___local,
								___qname, __atts);
						return;
					case 0:
						if (("remove" == ___local) && ("" == ___uri)) {
							context.pushAttributes(__atts, true);
							state = 1;
							return;
						}
						break;
					}
					super.enterElement(___uri, ___local, ___qname, __atts);
					break;
				}
			}

			@Override
			public void handleText(final java.lang.String value)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					try {
						switch (state) {
						case 1:
							attIdx = context.getAttribute("", "construct");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "definiteness");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "dotted");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "gender");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("",
									"inflectConstruct");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "number");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "pgn");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "script");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "transliterated");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							break;
						case 3:
							revertToParentFromText(value);
							return;
						}
					} catch (java.lang.RuntimeException e) {
						handleUnexpectedTextException(value, e);
					}
					break;
				}
			}

			@Override
			public void leaveAttribute(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						break;
					case 3:
						revertToParentFromLeaveAttribute(___uri, ___local,
								___qname);
						return;
					}
					super.leaveAttribute(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public void leaveElement(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						break;
					case 3:
						revertToParentFromLeaveElement(___uri, ___local,
								___qname);
						return;
					case 2:
						if (("remove" == ___local) && ("" == ___uri)) {
							context.popAttributes();
							state = 3;
							return;
						}
						break;
					}
					super.leaveElement(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public java.lang.Object owner() {
				return mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.this;
			}

		}

		public final static java.lang.Class version = (mila.generated.impl.JAXBVersion.class);

		private static com.sun.msv.grammar.Grammar schemaFragment;

		private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
			return (mila.generated.NumeralLexiconType.Remove.class);
		}

		@Override
		public java.lang.String ____jaxb_ri____getLocalName() {
			return "remove";
		}

		@Override
		public java.lang.String ____jaxb_ri____getNamespaceURI() {
			return "";
		}

		@Override
		public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
			if (schemaFragment == null) {
				schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
						.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
								+ "\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
								+ "grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
								+ "\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
								+ "msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
								+ "ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
								+ "mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
								+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
								+ "q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
								+ "\u0007ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/re"
								+ "laxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv"
								+ "/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.TokenT"
								+ "ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
								+ "\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
								+ "icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
								+ "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
								+ "\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwh"
								+ "iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
								+ "\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.da"
								+ "tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.su"
								+ "n.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com."
								+ "sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
								+ "\u0004ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
								+ "\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sr\u0000\u001dcom.sun.msv.grammar.Ch"
								+ "oiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeE"
								+ "xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang"
								+ ".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0014ppsr\u0000)com.sun.msv.datat"
								+ "ype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Se"
								+ "t;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFa"
								+ "cet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet"
								+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000"
								+ ")Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'"
								+ "Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001dxq\u0000~"
								+ "\u0000\u001ct\u0000\u0000t\u0000\u000eThreeStateTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001ft\u0000\u000benumerationsr\u0000\u0011jav"
								+ "a.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u000bunspecifiedt\u0000\u0004tr"
								+ "uet\u0000\u0005falsexq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u00008q\u0000~\u00007sr\u0000#com.sun.msv.grammar.Simp"
								+ "leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dx"
								+ "r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tconstructq\u0000~"
								+ "\u00007sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
								+ "\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000-\u0001q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~"
								+ "\u00007t\u0000\u000fDefinitnessTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000"
								+ "\u0000\u0005t\u0000\nprohibitedt\u0000\boptionalt\u0000\brequiredt\u0000\bexternalt\u0000\binternalx"
								+ "q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000Kq\u0000~\u00007sq\u0000~\u0000@t\u0000\fdefinitenessq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)pp"
								+ "sq\u0000~\u0000+q\u0000~\u0000.pq\u0000~\u0000\u0017sq\u0000~\u0000@t\u0000\u0006dottedq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000"
								+ ".psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nGenderTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~"
								+ "\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bfemininet\u0000\u0016masculine and fe"
								+ "mininet\u0000\tmasculinexq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000]q\u0000~\u00007sq\u0000~\u0000@t\u0000\u0006genderq\u0000~\u00007"
								+ "q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsr\u0000$com.sun.msv.datatype.xs"
								+ "d.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007booleanq\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000"
								+ "\'q\u0000~\u0000kq\u0000~\u0000 sq\u0000~\u0000@t\u0000\u0010inflectConstructq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+"
								+ "q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nNumberTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009"
								+ "sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0013singular and pluralt\u0000\u0004d"
								+ "ualt\u0000\u000fdual and pluralt\u0000\bsingulart\u0000\u0006pluralxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000sq\u0000"
								+ "~\u00007sq\u0000~\u0000@t\u0000\u0006numberq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~"
								+ "\u00000q\u0000~\u00007t\u0000\u0007PGNTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u0013t"
								+ "\u0000\t123p/M/Sgt\u0000\u00072p/M/Plt\u0000\u00073p/M/Sgt\u0000\b1p/MF/Sgt\u0000\t123p/M/Plt\u0000\b2p/"
								+ "MF/Plt\u0000\u00072p/M/Sgt\u0000\u00071p/F/Sgt\u0000\b3p/MF/Plt\u0000\u00073p/F/Plt\u0000\u00071p/M/Sgt\u0000\u000bu"
								+ "nspecifiedt\u0000\u00072p/F/Plt\u0000\t123p/F/Plt\u0000\u00073p/M/Plt\u0000\u00073p/F/Sgt\u0000\t123p/"
								+ "F/Sgt\u0000\b1p/MF/Plt\u0000\u00072p/F/Sgxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u0082q\u0000~\u00007sq\u0000~\u0000@t\u0000\u0003pgnq"
								+ "\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nScriptTyp"
								+ "eq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0004typot\u0000\u0006formalt"
								+ "\u0000\u0005slangt\u0000\ncolloquialxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u009eq\u0000~\u00007sq\u0000~\u0000@t\u0000\u0006scriptq\u0000~"
								+ "\u00007q\u0000~\u0000Esq\u0000~\u0000+ppq\u0000~\u0000\u0017sq\u0000~\u0000@t\u0000\u000etransliteratedq\u0000~\u00007sq\u0000~\u0000+ppq\u0000~\u0000"
								+ "\u0017sq\u0000~\u0000@t\u0000\bundottedq\u0000~\u00007sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsr\u0000\"com.s"
								+ "un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNameq"
								+ "\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u00b2q\u0000~\u0000 sq\u0000~\u0000@t\u0000\u0004typet\u0000)http://www.w3.org/2"
								+ "001/XMLSchema-instanceq\u0000~\u0000Esq\u0000~\u0000@t\u0000\u0006removeq\u0000~\u00007sr\u0000\"com.sun.m"
								+ "sv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/m"
								+ "sv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramm"
								+ "ar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVers"
								+ "ionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq"
								+ "\u0000~\u0000\u00adq\u0000~\u0000Gq\u0000~\u0000~q\u0000~\u0000\u000bq\u0000~\u0000\u000eq\u0000~\u0000\nq\u0000~\u0000fq\u0000~\u0000\u000fq\u0000~\u0000Uq\u0000~\u0000\u0010q\u0000~\u0000Yq\u0000~\u0000\u0013q"
								+ "\u0000~\u0000\u0012q\u0000~\u0000\u009aq\u0000~\u0000oq\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000\rq\u0000~\u0000\u0011q\u0000~\u0000*x"));
			}
			return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
					schemaFragment);
		}

		@Override
		public mila.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
				mila.generated.impl.runtime.UnmarshallingContext context) {
			return new mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.Unmarshaller(
					context);
		}

		@Override
		public java.lang.Class getPrimaryInterface() {
			return (mila.generated.NumeralLexiconType.Remove.class);
		}

		@Override
		public void serializeAttributes(
				mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
		}

		@Override
		public void serializeBody(mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
			context.startElement("", "remove");
			super.serializeURIs(context);
			context.endNamespaceDecls();
			super.serializeAttributes(context);
			context.endAttributes();
			super.serializeBody(context);
			context.endElement();
		}

		@Override
		public void serializeURIs(mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
		}

	}

	public static class ReplaceImpl extends
			mila.generated.impl.NumeralExceptionTypeImpl implements
			mila.generated.NumeralLexiconType.Replace, com.sun.xml.bind.RIElement,
			com.sun.xml.bind.JAXBObject,
			mila.generated.impl.runtime.UnmarshallableObject,
			mila.generated.impl.runtime.XMLSerializable,
			mila.generated.impl.runtime.ValidatableObject {

		public class Unmarshaller extends
				mila.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

			public Unmarshaller(
					mila.generated.impl.runtime.UnmarshallingContext context) {
				super(context, "----");
			}

			protected Unmarshaller(
					mila.generated.impl.runtime.UnmarshallingContext context,
					int startState) {
				this(context);
				state = startState;
			}

			@Override
			public void enterAttribute(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						if (("construct" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("definiteness" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("dotted" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("gender" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("inflectConstruct" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("number" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("pgn" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("script" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						if (("transliterated" == ___local) && ("" == ___uri)) {
							spawnHandlerFromEnterAttribute(
									(((mila.generated.impl.NumeralExceptionTypeImpl) mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(
											context)), 2, ___uri, ___local,
									___qname);
							return;
						}
						break;
					case 3:
						revertToParentFromEnterAttribute(___uri, ___local,
								___qname);
						return;
					}
					super.enterAttribute(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public void enterElement(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname,
					org.xml.sax.Attributes __atts)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().enterElement(___uri,
									___local, ___qname, __atts);
							return;
						}
						break;
					case 3:
						revertToParentFromEnterElement(___uri, ___local,
								___qname, __atts);
						return;
					case 0:
						if (("replace" == ___local) && ("" == ___uri)) {
							context.pushAttributes(__atts, true);
							state = 1;
							return;
						}
						break;
					}
					super.enterElement(___uri, ___local, ___qname, __atts);
					break;
				}
			}

			@Override
			public void handleText(final java.lang.String value)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					try {
						switch (state) {
						case 1:
							attIdx = context.getAttribute("", "construct");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "definiteness");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "dotted");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "gender");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("",
									"inflectConstruct");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "number");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "pgn");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "script");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							attIdx = context.getAttribute("", "transliterated");
							if (attIdx >= 0) {
								context.consumeAttribute(attIdx);
								context.getCurrentHandler().text(value);
								return;
							}
							break;
						case 3:
							revertToParentFromText(value);
							return;
						}
					} catch (java.lang.RuntimeException e) {
						handleUnexpectedTextException(value, e);
					}
					break;
				}
			}

			@Override
			public void leaveAttribute(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveAttribute(___uri,
									___local, ___qname);
							return;
						}
						break;
					case 3:
						revertToParentFromLeaveAttribute(___uri, ___local,
								___qname);
						return;
					}
					super.leaveAttribute(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public void leaveElement(java.lang.String ___uri,
					java.lang.String ___local, java.lang.String ___qname)
					throws org.xml.sax.SAXException {
				int attIdx;
				outer: while (true) {
					switch (state) {
					case 1:
						attIdx = context.getAttribute("", "construct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "dotted");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "inflectConstruct");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "pgn");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "script");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						attIdx = context.getAttribute("", "transliterated");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().leaveElement(___uri,
									___local, ___qname);
							return;
						}
						break;
					case 2:
						if (("replace" == ___local) && ("" == ___uri)) {
							context.popAttributes();
							state = 3;
							return;
						}
						break;
					case 3:
						revertToParentFromLeaveElement(___uri, ___local,
								___qname);
						return;
					}
					super.leaveElement(___uri, ___local, ___qname);
					break;
				}
			}

			@Override
			public java.lang.Object owner() {
				return mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.this;
			}

		}

		public final static java.lang.Class version = (mila.generated.impl.JAXBVersion.class);

		private static com.sun.msv.grammar.Grammar schemaFragment;

		private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
			return (mila.generated.NumeralLexiconType.Replace.class);
		}

		@Override
		public java.lang.String ____jaxb_ri____getLocalName() {
			return "replace";
		}

		@Override
		public java.lang.String ____jaxb_ri____getNamespaceURI() {
			return "";
		}

		@Override
		public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
			if (schemaFragment == null) {
				schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
						.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
								+ "\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
								+ "grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
								+ "\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
								+ "msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
								+ "ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
								+ "mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
								+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
								+ "q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
								+ "\u0007ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/re"
								+ "laxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv"
								+ "/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.TokenT"
								+ "ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
								+ "\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
								+ "icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
								+ "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
								+ "\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwh"
								+ "iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
								+ "\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.da"
								+ "tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.su"
								+ "n.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com."
								+ "sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
								+ "\u0004ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
								+ "\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sr\u0000\u001dcom.sun.msv.grammar.Ch"
								+ "oiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeE"
								+ "xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang"
								+ ".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0014ppsr\u0000)com.sun.msv.datat"
								+ "ype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Se"
								+ "t;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFa"
								+ "cet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet"
								+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000"
								+ ")Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'"
								+ "Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001dxq\u0000~"
								+ "\u0000\u001ct\u0000\u0000t\u0000\u000eThreeStateTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001ft\u0000\u000benumerationsr\u0000\u0011jav"
								+ "a.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u000bunspecifiedt\u0000\u0004tr"
								+ "uet\u0000\u0005falsexq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u00008q\u0000~\u00007sr\u0000#com.sun.msv.grammar.Simp"
								+ "leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dx"
								+ "r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tconstructq\u0000~"
								+ "\u00007sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
								+ "\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000-\u0001q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~"
								+ "\u00007t\u0000\u000fDefinitnessTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000"
								+ "\u0000\u0005t\u0000\nprohibitedt\u0000\boptionalt\u0000\brequiredt\u0000\bexternalt\u0000\binternalx"
								+ "q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000Kq\u0000~\u00007sq\u0000~\u0000@t\u0000\fdefinitenessq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)pp"
								+ "sq\u0000~\u0000+q\u0000~\u0000.pq\u0000~\u0000\u0017sq\u0000~\u0000@t\u0000\u0006dottedq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000"
								+ ".psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nGenderTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~"
								+ "\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bfemininet\u0000\u0016masculine and fe"
								+ "mininet\u0000\tmasculinexq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000]q\u0000~\u00007sq\u0000~\u0000@t\u0000\u0006genderq\u0000~\u00007"
								+ "q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsr\u0000$com.sun.msv.datatype.xs"
								+ "d.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007booleanq\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000"
								+ "\'q\u0000~\u0000kq\u0000~\u0000 sq\u0000~\u0000@t\u0000\u0010inflectConstructq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+"
								+ "q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nNumberTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009"
								+ "sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0013singular and pluralt\u0000\u0004d"
								+ "ualt\u0000\u000fdual and pluralt\u0000\bsingulart\u0000\u0006pluralxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000sq\u0000"
								+ "~\u00007sq\u0000~\u0000@t\u0000\u0006numberq\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~"
								+ "\u00000q\u0000~\u00007t\u0000\u0007PGNTypeq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u0013t"
								+ "\u0000\t123p/M/Sgt\u0000\u00072p/M/Plt\u0000\u00073p/M/Sgt\u0000\b1p/MF/Sgt\u0000\t123p/M/Plt\u0000\b2p/"
								+ "MF/Plt\u0000\u00072p/M/Sgt\u0000\u00071p/F/Sgt\u0000\b3p/MF/Plt\u0000\u00073p/F/Plt\u0000\u00071p/M/Sgt\u0000\u000bu"
								+ "nspecifiedt\u0000\u00072p/F/Plt\u0000\t123p/F/Plt\u0000\u00073p/M/Plt\u0000\u00073p/F/Sgt\u0000\t123p/"
								+ "F/Sgt\u0000\b1p/MF/Plt\u0000\u00072p/F/Sgxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u0082q\u0000~\u00007sq\u0000~\u0000@t\u0000\u0003pgnq"
								+ "\u0000~\u00007q\u0000~\u0000Esq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsq\u0000~\u00000q\u0000~\u00007t\u0000\nScriptTyp"
								+ "eq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u00009sq\u0000~\u0000:w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0004typot\u0000\u0006formalt"
								+ "\u0000\u0005slangt\u0000\ncolloquialxq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u009eq\u0000~\u00007sq\u0000~\u0000@t\u0000\u0006scriptq\u0000~"
								+ "\u00007q\u0000~\u0000Esq\u0000~\u0000+ppq\u0000~\u0000\u0017sq\u0000~\u0000@t\u0000\u000etransliteratedq\u0000~\u00007sq\u0000~\u0000+ppq\u0000~\u0000"
								+ "\u0017sq\u0000~\u0000@t\u0000\bundottedq\u0000~\u00007sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000.psq\u0000~\u0000\u0014ppsr\u0000\"com.s"
								+ "un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNameq"
								+ "\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000\u00b2q\u0000~\u0000 sq\u0000~\u0000@t\u0000\u0004typet\u0000)http://www.w3.org/2"
								+ "001/XMLSchema-instanceq\u0000~\u0000Esq\u0000~\u0000@t\u0000\u0007replaceq\u0000~\u00007sr\u0000\"com.sun."
								+ "msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
								+ "msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
								+ "mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVer"
								+ "sionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001p"
								+ "q\u0000~\u0000\u00adq\u0000~\u0000Gq\u0000~\u0000~q\u0000~\u0000\u000bq\u0000~\u0000\u000eq\u0000~\u0000\nq\u0000~\u0000fq\u0000~\u0000\u000fq\u0000~\u0000Uq\u0000~\u0000\u0010q\u0000~\u0000Yq\u0000~\u0000\u0013"
								+ "q\u0000~\u0000\u0012q\u0000~\u0000\u009aq\u0000~\u0000oq\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000\rq\u0000~\u0000\u0011q\u0000~\u0000*x"));
			}
			return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
					schemaFragment);
		}

		@Override
		public mila.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
				mila.generated.impl.runtime.UnmarshallingContext context) {
			return new mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.Unmarshaller(
					context);
		}

		@Override
		public java.lang.Class getPrimaryInterface() {
			return (mila.generated.NumeralLexiconType.Replace.class);
		}

		@Override
		public void serializeAttributes(
				mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
		}

		@Override
		public void serializeBody(mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
			context.startElement("", "replace");
			super.serializeURIs(context);
			context.endNamespaceDecls();
			super.serializeAttributes(context);
			context.endAttributes();
			super.serializeBody(context);
			context.endElement();
		}

		@Override
		public void serializeURIs(mila.generated.impl.runtime.XMLSerializer context)
				throws org.xml.sax.SAXException {
		}

	}

	public class Unmarshaller extends
			mila.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

		public Unmarshaller(mila.generated.impl.runtime.UnmarshallingContext context) {
			super(context, "--------------------");
		}

		protected Unmarshaller(
				mila.generated.impl.runtime.UnmarshallingContext context,
				int startState) {
			this(context);
			state = startState;
		}

		private void eatText1(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Value = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText2(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Definiteness = com.sun.xml.bind.WhiteSpaceProcessor
						.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText3(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText4(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Number = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText5(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Gender = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText6(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Inflect = javax.xml.bind.DatatypeConverter
						.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Inflect = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		@Override
		public void enterAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 15:
					if (("value" == ___local) && ("" == ___uri)) {
						state = 16;
						return;
					}
					state = 18;
					continue outer;
				case 0:
					if (("definiteness" == ___local) && ("" == ___uri)) {
						state = 1;
						return;
					}
					state = 3;
					continue outer;
				case 19:
					revertToParentFromEnterAttribute(___uri, ___local, ___qname);
					return;
				case 12:
					if (("type" == ___local) && ("" == ___uri)) {
						state = 13;
						return;
					}
					state = 15;
					continue outer;
				case 9:
					if (("number" == ___local) && ("" == ___uri)) {
						state = 10;
						return;
					}
					state = 12;
					continue outer;
				case 18:
					state = 19;
					continue outer;
				case 3:
					if (("gender" == ___local) && ("" == ___uri)) {
						state = 4;
						return;
					}
					state = 6;
					continue outer;
				case 6:
					if (("inflect" == ___local) && ("" == ___uri)) {
						state = 7;
						return;
					}
					state = 9;
					continue outer;
				}
				super.enterAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public void enterElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname,
				org.xml.sax.Attributes __atts) throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 15:
					attIdx = context.getAttribute("", "value");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 18;
						eatText1(v);
						continue outer;
					}
					state = 18;
					continue outer;
				case 0:
					attIdx = context.getAttribute("", "definiteness");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 3;
						eatText2(v);
						continue outer;
					}
					state = 3;
					continue outer;
				case 19:
					if (("add" == ___local) && ("" == ___uri)) {
						_getAddOrReplaceOrRemove()
								.add(spawnChildFromEnterElement(
										(mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.class),
										19, ___uri, ___local, ___qname, __atts));
						return;
					}
					if (("replace" == ___local) && ("" == ___uri)) {
						_getAddOrReplaceOrRemove()
								.add(spawnChildFromEnterElement(
										(mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.class),
										19, ___uri, ___local, ___qname, __atts));
						return;
					}
					if (("remove" == ___local) && ("" == ___uri)) {
						_getAddOrReplaceOrRemove()
								.add(spawnChildFromEnterElement(
										(mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.class),
										19, ___uri, ___local, ___qname, __atts));
						return;
					}
					revertToParentFromEnterElement(___uri, ___local, ___qname,
							__atts);
					return;
				case 12:
					attIdx = context.getAttribute("", "type");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 15;
						eatText3(v);
						continue outer;
					}
					state = 15;
					continue outer;
				case 9:
					attIdx = context.getAttribute("", "number");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 12;
						eatText4(v);
						continue outer;
					}
					state = 12;
					continue outer;
				case 18:
					if (("add" == ___local) && ("" == ___uri)) {
						_getAddOrReplaceOrRemove()
								.add(spawnChildFromEnterElement(
										(mila.generated.impl.NumeralLexiconTypeImpl.AddImpl.class),
										19, ___uri, ___local, ___qname, __atts));
						return;
					}
					if (("replace" == ___local) && ("" == ___uri)) {
						_getAddOrReplaceOrRemove()
								.add(spawnChildFromEnterElement(
										(mila.generated.impl.NumeralLexiconTypeImpl.ReplaceImpl.class),
										19, ___uri, ___local, ___qname, __atts));
						return;
					}
					if (("remove" == ___local) && ("" == ___uri)) {
						_getAddOrReplaceOrRemove()
								.add(spawnChildFromEnterElement(
										(mila.generated.impl.NumeralLexiconTypeImpl.RemoveImpl.class),
										19, ___uri, ___local, ___qname, __atts));
						return;
					}
					state = 19;
					continue outer;
				case 3:
					attIdx = context.getAttribute("", "gender");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 6;
						eatText5(v);
						continue outer;
					}
					state = 6;
					continue outer;
				case 6:
					attIdx = context.getAttribute("", "inflect");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 9;
						eatText6(v);
						continue outer;
					}
					state = 9;
					continue outer;
				}
				super.enterElement(___uri, ___local, ___qname, __atts);
				break;
			}
		}

		@Override
		public void handleText(final java.lang.String value)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				try {
					switch (state) {
					case 15:
						attIdx = context.getAttribute("", "value");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 18;
							eatText1(v);
							continue outer;
						}
						state = 18;
						continue outer;
					case 0:
						attIdx = context.getAttribute("", "definiteness");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 3;
							eatText2(v);
							continue outer;
						}
						state = 3;
						continue outer;
					case 19:
						revertToParentFromText(value);
						return;
					case 13:
						state = 14;
						eatText3(value);
						return;
					case 16:
						state = 17;
						eatText1(value);
						return;
					case 10:
						state = 11;
						eatText4(value);
						return;
					case 12:
						attIdx = context.getAttribute("", "type");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 15;
							eatText3(v);
							continue outer;
						}
						state = 15;
						continue outer;
					case 9:
						attIdx = context.getAttribute("", "number");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 12;
							eatText4(v);
							continue outer;
						}
						state = 12;
						continue outer;
					case 1:
						state = 2;
						eatText2(value);
						return;
					case 18:
						state = 19;
						continue outer;
					case 4:
						state = 5;
						eatText5(value);
						return;
					case 7:
						state = 8;
						eatText6(value);
						return;
					case 3:
						attIdx = context.getAttribute("", "gender");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 6;
							eatText5(v);
							continue outer;
						}
						state = 6;
						continue outer;
					case 6:
						attIdx = context.getAttribute("", "inflect");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 9;
							eatText6(v);
							continue outer;
						}
						state = 9;
						continue outer;
					}
				} catch (java.lang.RuntimeException e) {
					handleUnexpectedTextException(value, e);
				}
				break;
			}
		}

		@Override
		public void leaveAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 15:
					attIdx = context.getAttribute("", "value");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 18;
						eatText1(v);
						continue outer;
					}
					state = 18;
					continue outer;
				case 0:
					attIdx = context.getAttribute("", "definiteness");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 3;
						eatText2(v);
						continue outer;
					}
					state = 3;
					continue outer;
				case 19:
					revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
					return;
				case 11:
					if (("number" == ___local) && ("" == ___uri)) {
						state = 12;
						return;
					}
					break;
				case 17:
					if (("value" == ___local) && ("" == ___uri)) {
						state = 18;
						return;
					}
					break;
				case 12:
					attIdx = context.getAttribute("", "type");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 15;
						eatText3(v);
						continue outer;
					}
					state = 15;
					continue outer;
				case 8:
					if (("inflect" == ___local) && ("" == ___uri)) {
						state = 9;
						return;
					}
					break;
				case 9:
					attIdx = context.getAttribute("", "number");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 12;
						eatText4(v);
						continue outer;
					}
					state = 12;
					continue outer;
				case 18:
					state = 19;
					continue outer;
				case 2:
					if (("definiteness" == ___local) && ("" == ___uri)) {
						state = 3;
						return;
					}
					break;
				case 3:
					attIdx = context.getAttribute("", "gender");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 6;
						eatText5(v);
						continue outer;
					}
					state = 6;
					continue outer;
				case 14:
					if (("type" == ___local) && ("" == ___uri)) {
						state = 15;
						return;
					}
					break;
				case 5:
					if (("gender" == ___local) && ("" == ___uri)) {
						state = 6;
						return;
					}
					break;
				case 6:
					attIdx = context.getAttribute("", "inflect");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 9;
						eatText6(v);
						continue outer;
					}
					state = 9;
					continue outer;
				}
				super.leaveAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public void leaveElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 15:
					attIdx = context.getAttribute("", "value");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 18;
						eatText1(v);
						continue outer;
					}
					state = 18;
					continue outer;
				case 0:
					attIdx = context.getAttribute("", "definiteness");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 3;
						eatText2(v);
						continue outer;
					}
					state = 3;
					continue outer;
				case 19:
					revertToParentFromLeaveElement(___uri, ___local, ___qname);
					return;
				case 12:
					attIdx = context.getAttribute("", "type");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 15;
						eatText3(v);
						continue outer;
					}
					state = 15;
					continue outer;
				case 9:
					attIdx = context.getAttribute("", "number");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 12;
						eatText4(v);
						continue outer;
					}
					state = 12;
					continue outer;
				case 18:
					state = 19;
					continue outer;
				case 3:
					attIdx = context.getAttribute("", "gender");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 6;
						eatText5(v);
						continue outer;
					}
					state = 6;
					continue outer;
				case 6:
					attIdx = context.getAttribute("", "inflect");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 9;
						eatText6(v);
						continue outer;
					}
					state = 9;
					continue outer;
				}
				super.leaveElement(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public java.lang.Object owner() {
			return mila.generated.impl.NumeralLexiconTypeImpl.this;
		}

	}

	protected java.lang.String _Type;
	protected java.lang.String _Value;
	protected java.lang.String _Gender;
	protected java.lang.String _Number;
	protected boolean has_Inflect;
	protected boolean _Inflect;

	protected com.sun.xml.bind.util.ListImpl _AddOrReplaceOrRemove;

	protected java.lang.String _Definiteness;

	public final static java.lang.Class version = (mila.generated.impl.JAXBVersion.class);

	private static com.sun.msv.grammar.Grammar schemaFragment;

	private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
		return (mila.generated.NumeralLexiconType.class);
	}

	protected com.sun.xml.bind.util.ListImpl _getAddOrReplaceOrRemove() {
		if (_AddOrReplaceOrRemove == null) {
			_AddOrReplaceOrRemove = new com.sun.xml.bind.util.ListImpl(
					new java.util.ArrayList());
		}
		return _AddOrReplaceOrRemove;
	}

	@Override
	public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
		if (schemaFragment == null) {
			schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
					.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
							+ "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
							+ "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
							+ "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
							+ "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
							+ "sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
							+ "sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\u001dcom.sun"
							+ ".msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000eppsq\u0000~\u0000\u000eppsq\u0000"
							+ "~\u0000\u000bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.m"
							+ "sv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom"
							+ "/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementEx"
							+ "p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000"
							+ "\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u000bq\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.At"
							+ "tributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0016xq\u0000~\u0000\u0003q\u0000~\u0000\u0014"
							+ "psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000"
							+ "\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClass"
							+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
							+ "0com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
							+ "xq\u0000~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000"
							+ "\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&x"
							+ "q\u0000~\u0000!t\u0000 generated.NumeralLexiconType.Addt\u0000+http://java.sun.c"
							+ "om/jaxb/xjc/dummy-elementsq\u0000~\u0000$sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq\u0000~"
							+ "\u0000\u000bq\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000$generated.Numera"
							+ "lLexiconType.Replaceq\u0000~\u0000)sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u000bq\u0000~\u0000"
							+ "\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000#generated.NumeralLexic"
							+ "onType.Removeq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.gramma"
							+ "r.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L"
							+ "\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003pp"
							+ "sr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006v"
							+ "aluest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataType"
							+ "WithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
							+ "xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueC"
							+ "heckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeIm"
							+ "pl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;"
							+ "L\u0000\tfacetNameq\u0000~\u0000&xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl"
							+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000~\u0000&L\u0000\nwhiteSpace"
							+ "t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\u000fDef"
							+ "initnessTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
							+ "$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceP"
							+ "rocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000\"com.sun.msv.datatype.xsd.TokenTyp"
							+ "e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
							+ "\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
							+ "Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
							+ "\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Dt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokenq\u0000~\u0000"
							+ "K\u0001q\u0000~\u0000Pt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000"
							+ "\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\nprohibitedt\u0000\boptionalt\u0000\brequiredt\u0000\bexternalt\u0000\bin"
							+ "ternalxsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000"
							+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
							+ "L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000~\u0000Hq\u0000~\u0000Gsq\u0000~\u0000%t\u0000\fde"
							+ "finitenessq\u0000~\u0000Gq\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psq\u0000~\u0000:ppsq\u0000~\u0000>q\u0000~\u0000Gt"
							+ "\u0000\nGenderTypeq\u0000~\u0000K\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pq\u0000~\u0000Ssq\u0000~\u0000Tw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000buns"
							+ "pecifiedt\u0000\bfemininet\u0000\u0016masculine and femininet\u0000\tmasculinexq\u0000~"
							+ "\u0000\\sq\u0000~\u0000]q\u0000~\u0000eq\u0000~\u0000Gsq\u0000~\u0000%t\u0000\u0006genderq\u0000~\u0000Gq\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~"
							+ "\u0000\u0014psq\u0000~\u0000:ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
							+ "\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000Qt\u0000\u0007booleanq\u0000~\u0000Kq\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000sq\u0000~\u0000Qsq\u0000~\u0000%t\u0000\u0007in"
							+ "flectq\u0000~\u0000Gq\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psq\u0000~\u0000:ppsq\u0000~\u0000>q\u0000~\u0000Gt\u0000\nNum"
							+ "berTypeq\u0000~\u0000K\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pq\u0000~\u0000Ssq\u0000~\u0000Tw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecif"
							+ "iedt\u0000\u0013singular and pluralt\u0000\u0004dualt\u0000\u000fdual and pluralt\u0000\bsingula"
							+ "rt\u0000\u0006pluralxq\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000{q\u0000~\u0000Gsq\u0000~\u0000%t\u0000\u0006numberq\u0000~\u0000Gq\u0000~\u0000$sq\u0000"
							+ "~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psq\u0000~\u0000:ppsq\u0000~\u0000>q\u0000~\u0000Gt\u0000\u000bNumeralTypeq\u0000~\u0000K\u0000\u0000q\u0000~"
							+ "\u0000Pq\u0000~\u0000Pq\u0000~\u0000Ssq\u0000~\u0000Tw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0012numeral fra"
							+ "ctionalt\u0000\bgematriat\u0000\u000eliteral numbert\u0000\u0010numeral cardinalt\u0000\u000fnum"
							+ "eral ordinalxq\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000\u008aq\u0000~\u0000Gsq\u0000~\u0000%t\u0000\u0004typeq\u0000~\u0000Gq\u0000~\u0000$sq\u0000"
							+ "~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psq\u0000~\u0000:ppq\u0000~\u0000Pq\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000Rq\u0000~\u0000Qsq\u0000~\u0000%t\u0000\u0005"
							+ "valueq\u0000~\u0000Gq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
							+ "\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Closed"
							+ "Hash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N"
							+ "\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gram"
							+ "mar/ExpressionPool;xp\u0000\u0000\u0000\u0019\u0001pq\u0000~\u0000\u0006q\u0000~\u0000aq\u0000~\u0000\u0005q\u0000~\u0000\u001aq\u0000~\u0000-q\u0000~\u00004q\u0000~"
							+ "\u0000\u0010q\u0000~\u0000nq\u0000~\u0000\u0095q\u0000~\u0000\nq\u0000~\u0000\u000fq\u0000~\u0000wq\u0000~\u0000\u0007q\u0000~\u0000\u0019q\u0000~\u0000,q\u0000~\u00003q\u0000~\u0000\tq\u0000~\u00008q\u0000~"
							+ "\u0000\u0086q\u0000~\u0000\u0012q\u0000~\u0000*q\u0000~\u00001q\u0000~\u0000\bq\u0000~\u0000\rq\u0000~\u0000\u0011x"));
		}
		return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
				schemaFragment);
	}

	@Override
	public mila.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
			mila.generated.impl.runtime.UnmarshallingContext context) {
		return new mila.generated.impl.NumeralLexiconTypeImpl.Unmarshaller(context);
	}

	@Override
	public java.util.List getAddOrReplaceOrRemove() {
		return _getAddOrReplaceOrRemove();
	}

	@Override
	public java.lang.String getDefiniteness() {
		if (_Definiteness == null) {
			return "optional";
		} else {
			return _Definiteness;
		}
	}

	@Override
	public java.lang.String getGender() {
		if (_Gender == null) {
			return "masculine";
		} else {
			return _Gender;
		}
	}

	@Override
	public java.lang.String getNumber() {
		if (_Number == null) {
			return "singular";
		} else {
			return _Number;
		}
	}

	@Override
	public java.lang.Class getPrimaryInterface() {
		return (mila.generated.NumeralLexiconType.class);
	}

	@Override
	public java.lang.String getType() {
		if (_Type == null) {
			return "unspecified";
		} else {
			return _Type;
		}
	}

	@Override
	public java.lang.String getValue() {
		if (_Value == null) {
			return "";
		} else {
			return _Value;
		}
	}

	@Override
	public boolean isInflect() {
		if (!has_Inflect) {
			return javax.xml.bind.DatatypeConverter
					.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl
							.installHook("false"));
		} else {
			return _Inflect;
		}
	}

	@Override
	public void serializeAttributes(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		int idx6 = 0;
		final int len6 = ((_AddOrReplaceOrRemove == null) ? 0
				: _AddOrReplaceOrRemove.size());
		if (_Definiteness != null) {
			context.startAttribute("", "definiteness");
			try {
				context.text(_Definiteness, "Definiteness");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_Gender != null) {
			context.startAttribute("", "gender");
			try {
				context.text(_Gender, "Gender");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (has_Inflect) {
			context.startAttribute("", "inflect");
			try {
				context.text(
						javax.xml.bind.DatatypeConverter.printBoolean(_Inflect),
						"Inflect");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_Number != null) {
			context.startAttribute("", "number");
			try {
				context.text(_Number, "Number");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_Type != null) {
			context.startAttribute("", "type");
			try {
				context.text(_Type, "Type");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_Value != null) {
			context.startAttribute("", "value");
			try {
				context.text(_Value, "Value");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		while (idx6 != len6) {
			while (idx6 != len6) {
				context.childAsAttributes(
						((com.sun.xml.bind.JAXBObject) _AddOrReplaceOrRemove
								.get(idx6++)), "AddOrReplaceOrRemove");
			}
		}
	}

	@Override
	public void serializeBody(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		int idx6 = 0;
		final int len6 = ((_AddOrReplaceOrRemove == null) ? 0
				: _AddOrReplaceOrRemove.size());
		while (idx6 != len6) {
			while (idx6 != len6) {
				context.childAsBody(
						((com.sun.xml.bind.JAXBObject) _AddOrReplaceOrRemove
								.get(idx6++)), "AddOrReplaceOrRemove");
			}
		}
	}

	@Override
	public void serializeURIs(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		int idx6 = 0;
		final int len6 = ((_AddOrReplaceOrRemove == null) ? 0
				: _AddOrReplaceOrRemove.size());
		while (idx6 != len6) {
			while (idx6 != len6) {
				context.childAsURIs(
						((com.sun.xml.bind.JAXBObject) _AddOrReplaceOrRemove
								.get(idx6++)), "AddOrReplaceOrRemove");
			}
		}
	}

	@Override
	public void setDefiniteness(java.lang.String value) {
		_Definiteness = value;
	}

	@Override
	public void setGender(java.lang.String value) {
		_Gender = value;
	}

	@Override
	public void setInflect(boolean value) {
		_Inflect = value;
		has_Inflect = true;
	}

	@Override
	public void setNumber(java.lang.String value) {
		_Number = value;
	}

	@Override
	public void setType(java.lang.String value) {
		_Type = value;
	}

	@Override
	public void setValue(java.lang.String value) {
		_Value = value;
	}

}
