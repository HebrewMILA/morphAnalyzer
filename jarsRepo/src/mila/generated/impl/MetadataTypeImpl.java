//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.14 at 03:41:34 PM IDT 
//

package mila.generated.impl;

public class MetadataTypeImpl implements mila.generated.MetadataType,
		com.sun.xml.bind.JAXBObject,
		mila.generated.impl.runtime.UnmarshallableObject,
		mila.generated.impl.runtime.XMLSerializable,
		mila.generated.impl.runtime.ValidatableObject {

	public class Unmarshaller extends
			mila.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

		public Unmarshaller(mila.generated.impl.runtime.UnmarshallingContext context) {
			super(context, "-------------------------------");
		}

		protected Unmarshaller(
				mila.generated.impl.runtime.UnmarshallingContext context,
				int startState) {
			this(context);
			state = startState;
		}

		private void eatText1(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Date = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText2(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Version = javax.xml.bind.DatatypeConverter
						.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Version = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText3(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_License = value;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText4(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Revision = com.sun.xml.bind.WhiteSpaceProcessor
						.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText5(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Email = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText6(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Name = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText7(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Comment = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText8(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Maintainer = com.sun.xml.bind.WhiteSpaceProcessor
						.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		@Override
		public void enterAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 30:
					revertToParentFromEnterAttribute(___uri, ___local, ___qname);
					return;
				case 25:
					if (("from" == ___local) && ("" == ___uri)) {
						_Transliteration = ((mila.generated.impl.TransliterationTypeImpl) spawnChildFromEnterAttribute(
								(mila.generated.impl.TransliterationTypeImpl.class),
								26, ___uri, ___local, ___qname));
						return;
					}
					break;
				case 27:
					state = 30;
					continue outer;
				case 19:
					if (("name" == ___local) && ("" == ___uri)) {
						_getSource().add(
								spawnChildFromEnterAttribute(
										(mila.generated.impl.SourceTypeImpl.class),
										20, ___uri, ___local, ___qname));
						return;
					}
					break;
				}
				super.enterAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public void enterElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname,
				org.xml.sax.Attributes __atts) throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 30:
					revertToParentFromEnterElement(___uri, ___local, ___qname,
							__atts);
					return;
				case 3:
					if (("version" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 4;
						return;
					}
					break;
				case 21:
					if (("source" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, false);
						state = 19;
						return;
					}
					if (("license" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 22;
						return;
					}
					break;
				case 12:
					if (("maintainer" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 13;
						return;
					}
					break;
				case 25:
					attIdx = context.getAttribute("", "from");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().enterElement(___uri,
								___local, ___qname, __atts);
						return;
					}
					break;
				case 24:
					if (("transliteration" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, false);
						state = 25;
						return;
					}
					break;
				case 27:
					if (("comment" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 28;
						return;
					}
					state = 30;
					continue outer;
				case 19:
					attIdx = context.getAttribute("", "name");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().enterElement(___uri,
								___local, ___qname, __atts);
						return;
					}
					break;
				case 0:
					if (("name" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 1;
						return;
					}
					break;
				case 9:
					if (("date" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 10;
						return;
					}
					break;
				case 18:
					if (("source" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, false);
						state = 19;
						return;
					}
					break;
				case 6:
					if (("revision" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 7;
						return;
					}
					break;
				case 15:
					if (("email" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, true);
						state = 16;
						return;
					}
					break;
				}
				super.enterElement(___uri, ___local, ___qname, __atts);
				break;
			}
		}

		@Override
		public void handleText(final java.lang.String value)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				try {
					switch (state) {
					case 30:
						revertToParentFromText(value);
						return;
					case 10:
						state = 11;
						eatText1(value);
						return;
					case 4:
						state = 5;
						eatText2(value);
						return;
					case 22:
						state = 23;
						eatText3(value);
						return;
					case 7:
						state = 8;
						eatText4(value);
						return;
					case 25:
						attIdx = context.getAttribute("", "from");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().text(value);
							return;
						}
						break;
					case 16:
						state = 17;
						eatText5(value);
						return;
					case 1:
						state = 2;
						eatText6(value);
						return;
					case 27:
						state = 30;
						continue outer;
					case 19:
						attIdx = context.getAttribute("", "name");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().text(value);
							return;
						}
						break;
					case 28:
						state = 29;
						eatText7(value);
						return;
					case 13:
						state = 14;
						eatText8(value);
						return;
					}
				} catch (java.lang.RuntimeException e) {
					handleUnexpectedTextException(value, e);
				}
				break;
			}
		}

		@Override
		public void leaveAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 30:
					revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
					return;
				case 25:
					attIdx = context.getAttribute("", "from");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().leaveAttribute(___uri,
								___local, ___qname);
						return;
					}
					break;
				case 27:
					state = 30;
					continue outer;
				case 19:
					attIdx = context.getAttribute("", "name");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().leaveAttribute(___uri,
								___local, ___qname);
						return;
					}
					break;
				}
				super.leaveAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public void leaveElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 30:
					revertToParentFromLeaveElement(___uri, ___local, ___qname);
					return;
				case 8:
					if (("revision" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 9;
						return;
					}
					break;
				case 14:
					if (("maintainer" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 15;
						return;
					}
					break;
				case 25:
					attIdx = context.getAttribute("", "from");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().leaveElement(___uri,
								___local, ___qname);
						return;
					}
					break;
				case 5:
					if (("version" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 6;
						return;
					}
					break;
				case 23:
					if (("license" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 24;
						return;
					}
					break;
				case 26:
					if (("transliteration" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 27;
						return;
					}
					break;
				case 2:
					if (("name" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 3;
						return;
					}
					break;
				case 27:
					state = 30;
					continue outer;
				case 19:
					attIdx = context.getAttribute("", "name");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().leaveElement(___uri,
								___local, ___qname);
						return;
					}
					break;
				case 29:
					if (("comment" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 30;
						return;
					}
					break;
				case 17:
					if (("email" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 18;
						return;
					}
					break;
				case 11:
					if (("date" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 12;
						return;
					}
					break;
				case 20:
					if (("source" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 21;
						return;
					}
					break;
				}
				super.leaveElement(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public java.lang.Object owner() {
			return mila.generated.impl.MetadataTypeImpl.this;
		}

	}

	protected java.lang.String _Comment;
	protected java.lang.String _Email;
	protected boolean has_Version;
	protected float _Version;
	protected java.lang.String _License;
	protected java.lang.String _Date;
	protected mila.generated.TransliterationType _Transliteration;
	protected java.lang.String _Maintainer;
	protected com.sun.xml.bind.util.ListImpl _Source;
	protected java.lang.String _Name;
	protected java.lang.String _Revision;
	public final static java.lang.Class version = (mila.generated.impl.JAXBVersion.class);

	private static com.sun.msv.grammar.Grammar schemaFragment;

	private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
		return (mila.generated.MetadataType.class);
	}

	protected com.sun.xml.bind.util.ListImpl _getSource() {
		if (_Source == null) {
			_Source = new com.sun.xml.bind.util.ListImpl(
					new java.util.ArrayList());
		}
		return _Source;
	}

	@Override
	public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
		if (schemaFragment == null) {
			schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
					.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
							+ "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
							+ "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
							+ "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
							+ "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
							+ "sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Element"
							+ "Pattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
							+ "ass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUn"
							+ "declaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bc"
							+ "om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
							+ "tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
							+ "ringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000"
							+ "\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ri"
							+ "sAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
							+ "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
							+ "\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
							+ "mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpace"
							+ "t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:/"
							+ "/www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.x"
							+ "sd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.da"
							+ "tatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv."
							+ "grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bc"
							+ "om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
							+ "espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000"
							+ "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
							+ "\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean"
							+ "\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xsd."
							+ "QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u00001"
							+ "q\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
							+ "calNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.Name"
							+ "Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
							+ "-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpressio"
							+ "n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000,\u0001q\u0000~\u00009sq\u0000~\u00003t\u0000\u0004namet\u0000\u0000sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000"
							+ "\u0000ppsq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
							+ "xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq"
							+ "\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005floatq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000Dq\u0000~\u0000\u001fsq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~"
							+ "\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007versionq\u0000~\u0000=sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000"
							+ "\u0016sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\brevisionq\u0000~\u0000=sq"
							+ "\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u0000"
							+ "3t\u0000\u0004dateq\u0000~\u0000=sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000."
							+ "q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\nmaintainerq\u0000~\u0000=sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~"
							+ "\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0005emailq\u0000~\u0000=sr\u0000 com.su"
							+ "n.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar"
							+ ".UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
							+ "\u0000\u000epp\u0000sq\u0000~\u0000(ppsq\u0000~\u0000bq\u0000~\u0000-psq\u0000~\u0000*q\u0000~\u0000-psr\u00002com.sun.msv.grammar"
							+ ".Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000:q\u0000~\u0000lsr"
							+ "\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009sq\u0000~"
							+ "\u00003t\u0000\u0014generated.SourceTypet\u0000+http://java.sun.com/jaxb/xjc/dum"
							+ "my-elementssq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0006sourc"
							+ "eq\u0000~\u0000=sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.s"
							+ "un.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
							+ "q\u0000~\u0000\"\u0001q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000zq\u0000~\u0000\u001fsq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~"
							+ "\u00009sq\u0000~\u00003t\u0000\u0007licenseq\u0000~\u0000=sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000(ppsq\u0000"
							+ "~\u0000bq\u0000~\u0000-psq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000lq\u0000~\u0000nq\u0000~\u00009sq\u0000~\u00003t\u0000\u001dgenerated.Trans"
							+ "literationTypeq\u0000~\u0000qsq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003"
							+ "t\u0000\u000ftransliterationq\u0000~\u0000=sq\u0000~\u0000(ppsq\u0000~\u0000\u000eq\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000"
							+ "~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007commentq\u0000~\u0000=q\u0000~\u00009sr"
							+ "\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000"
							+ "/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.su"
							+ "n.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000"
							+ "\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPoo"
							+ "l;xp\u0000\u0000\u0000#\u0001pq\u0000~\u0000\nq\u0000~\u0000\u000bq\u0000~\u0000\rq\u0000~\u0000\u0005q\u0000~\u0000iq\u0000~\u0000\u0086q\u0000~\u0000?q\u0000~\u0000)q\u0000~\u0000Fq\u0000~\u0000L"
							+ "q\u0000~\u0000Rq\u0000~\u0000Xq\u0000~\u0000^q\u0000~\u0000rq\u0000~\u0000~q\u0000~\u0000\tq\u0000~\u0000\u0007q\u0000~\u0000\u008aq\u0000~\u0000\u0006q\u0000~\u0000\u0091q\u0000~\u0000wq\u0000~\u0000\f"
							+ "q\u0000~\u0000\u0012q\u0000~\u0000Kq\u0000~\u0000Qq\u0000~\u0000Wq\u0000~\u0000]q\u0000~\u0000\u0090q\u0000~\u0000\u008eq\u0000~\u0000fq\u0000~\u0000\u0083q\u0000~\u0000hq\u0000~\u0000\u0085q\u0000~\u0000\b"
							+ "q\u0000~\u0000dx"));
		}
		return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
				schemaFragment);
	}

	@Override
	public mila.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
			mila.generated.impl.runtime.UnmarshallingContext context) {
		return new mila.generated.impl.MetadataTypeImpl.Unmarshaller(context);
	}

	@Override
	public java.lang.String getComment() {
		return _Comment;
	}

	@Override
	public java.lang.String getDate() {
		return _Date;
	}

	@Override
	public java.lang.String getEmail() {
		return _Email;
	}

	@Override
	public java.lang.String getLicense() {
		return _License;
	}

	@Override
	public java.lang.String getMaintainer() {
		return _Maintainer;
	}

	@Override
	public java.lang.String getName() {
		return _Name;
	}

	@Override
	public java.lang.Class getPrimaryInterface() {
		return (mila.generated.MetadataType.class);
	}

	@Override
	public java.lang.String getRevision() {
		return _Revision;
	}

	@Override
	public java.util.List getSource() {
		return _getSource();
	}

	@Override
	public mila.generated.TransliterationType getTransliteration() {
		return _Transliteration;
	}

	@Override
	public float getVersion() {
		return _Version;
	}

	@Override
	public void serializeAttributes(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		if (!has_Version) {
			context.reportError(com.sun.xml.bind.serializer.Util
					.createMissingObjectError(this, "Version"));
		}
		int idx8 = 0;
		final int len8 = ((_Source == null) ? 0 : _Source.size());
		while (idx8 != len8) {
			idx8 += 1;
		}
	}

	@Override
	public void serializeBody(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		if (!has_Version) {
			context.reportError(com.sun.xml.bind.serializer.Util
					.createMissingObjectError(this, "Version"));
		}
		int idx8 = 0;
		final int len8 = ((_Source == null) ? 0 : _Source.size());
		context.startElement("", "name");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(_Name, "Name");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		context.startElement("", "version");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(javax.xml.bind.DatatypeConverter.printFloat(_Version),
					"Version");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		context.startElement("", "revision");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(_Revision, "Revision");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		context.startElement("", "date");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(_Date, "Date");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		context.startElement("", "maintainer");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(_Maintainer, "Maintainer");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		context.startElement("", "email");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(_Email, "Email");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		while (idx8 != len8) {
			context.startElement("", "source");
			int idx_12 = idx8;
			context.childAsURIs(
					((com.sun.xml.bind.JAXBObject) _Source.get(idx_12++)),
					"Source");
			context.endNamespaceDecls();
			int idx_13 = idx8;
			context.childAsAttributes(
					((com.sun.xml.bind.JAXBObject) _Source.get(idx_13++)),
					"Source");
			context.endAttributes();
			context.childAsBody(
					((com.sun.xml.bind.JAXBObject) _Source.get(idx8++)),
					"Source");
			context.endElement();
		}
		context.startElement("", "license");
		context.endNamespaceDecls();
		context.endAttributes();
		try {
			context.text(_License, "License");
		} catch (java.lang.Exception e) {
			mila.generated.impl.runtime.Util.handlePrintConversionException(this, e,
					context);
		}
		context.endElement();
		context.startElement("", "transliteration");
		context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Transliteration),
				"Transliteration");
		context.endNamespaceDecls();
		context.childAsAttributes(
				((com.sun.xml.bind.JAXBObject) _Transliteration),
				"Transliteration");
		context.endAttributes();
		context.childAsBody(((com.sun.xml.bind.JAXBObject) _Transliteration),
				"Transliteration");
		context.endElement();
		if (_Comment != null) {
			context.startElement("", "comment");
			context.endNamespaceDecls();
			context.endAttributes();
			try {
				context.text(_Comment, "Comment");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endElement();
		}
	}

	@Override
	public void serializeURIs(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		if (!has_Version) {
			context.reportError(com.sun.xml.bind.serializer.Util
					.createMissingObjectError(this, "Version"));
		}
		int idx8 = 0;
		final int len8 = ((_Source == null) ? 0 : _Source.size());
		while (idx8 != len8) {
			idx8 += 1;
		}
	}

	@Override
	public void setComment(java.lang.String value) {
		_Comment = value;
	}

	@Override
	public void setDate(java.lang.String value) {
		_Date = value;
	}

	@Override
	public void setEmail(java.lang.String value) {
		_Email = value;
	}

	@Override
	public void setLicense(java.lang.String value) {
		_License = value;
	}

	@Override
	public void setMaintainer(java.lang.String value) {
		_Maintainer = value;
	}

	@Override
	public void setName(java.lang.String value) {
		_Name = value;
	}

	@Override
	public void setRevision(java.lang.String value) {
		_Revision = value;
	}

	@Override
	public void setTransliteration(mila.generated.TransliterationType value) {
		_Transliteration = value;
	}

	@Override
	public void setVersion(float value) {
		_Version = value;
		has_Version = true;
	}

}
