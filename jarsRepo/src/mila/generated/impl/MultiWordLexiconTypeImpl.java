//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.12.01 at 02:23:12 PM IST 
//

package mila.generated.impl;

public class MultiWordLexiconTypeImpl implements
		mila.generated.MultiWordLexiconType, com.sun.xml.bind.JAXBObject,
		mila.generated.impl.runtime.UnmarshallableObject,
		mila.generated.impl.runtime.XMLSerializable,
		mila.generated.impl.runtime.ValidatableObject {

	public class Unmarshaller extends
			mila.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

		public Unmarshaller(mila.generated.impl.runtime.UnmarshallingContext context) {
			super(context, "-------------------------");
		}

		protected Unmarshaller(
				mila.generated.impl.runtime.UnmarshallingContext context,
				int startState) {
			this(context);
			state = startState;
		}

		private void eatText1(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Possessive2 = javax.xml.bind.DatatypeConverter
						.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Possessive2 = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText2(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_MwPos = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText3(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Construct1 = javax.xml.bind.DatatypeConverter
						.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Construct1 = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText4(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Gender2 = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText5(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Base1 = javax.xml.bind.DatatypeConverter
						.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Base1 = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText6(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Base2 = javax.xml.bind.DatatypeConverter
						.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Base2 = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText7(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Consecutive = javax.xml.bind.DatatypeConverter
						.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor
								.collapse(value));
				has_Consecutive = true;
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		private void eatText8(final java.lang.String value)
				throws org.xml.sax.SAXException {
			try {
				_Gender1 = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
			} catch (java.lang.Exception e) {
				handleParseConversionException(e);
			}
		}

		@Override
		public void enterAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 21:
					if (("possessive2" == ___local) && ("" == ___uri)) {
						state = 22;
						return;
					}
					state = 24;
					continue outer;
				case 18:
					if (("mwPos" == ___local) && ("" == ___uri)) {
						state = 19;
						return;
					}
					state = 21;
					continue outer;
				case 9:
					if (("construct1" == ___local) && ("" == ___uri)) {
						state = 10;
						return;
					}
					state = 12;
					continue outer;
				case 15:
					if (("gender2" == ___local) && ("" == ___uri)) {
						state = 16;
						return;
					}
					state = 18;
					continue outer;
				case 24:
					revertToParentFromEnterAttribute(___uri, ___local, ___qname);
					return;
				case 0:
					if (("base1" == ___local) && ("" == ___uri)) {
						state = 1;
						return;
					}
					state = 3;
					continue outer;
				case 3:
					if (("base2" == ___local) && ("" == ___uri)) {
						state = 4;
						return;
					}
					state = 6;
					continue outer;
				case 6:
					if (("consecutive" == ___local) && ("" == ___uri)) {
						state = 7;
						return;
					}
					state = 9;
					continue outer;
				case 12:
					if (("gender1" == ___local) && ("" == ___uri)) {
						state = 13;
						return;
					}
					state = 15;
					continue outer;
				}
				super.enterAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public void enterElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname,
				org.xml.sax.Attributes __atts) throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 21:
					attIdx = context.getAttribute("", "possessive2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 24;
						eatText1(v);
						continue outer;
					}
					state = 24;
					continue outer;
				case 18:
					attIdx = context.getAttribute("", "mwPos");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 21;
						eatText2(v);
						continue outer;
					}
					state = 21;
					continue outer;
				case 9:
					attIdx = context.getAttribute("", "construct1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 12;
						eatText3(v);
						continue outer;
					}
					state = 12;
					continue outer;
				case 15:
					attIdx = context.getAttribute("", "gender2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 18;
						eatText4(v);
						continue outer;
					}
					state = 18;
					continue outer;
				case 24:
					revertToParentFromEnterElement(___uri, ___local, ___qname,
							__atts);
					return;
				case 0:
					attIdx = context.getAttribute("", "base1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 3;
						eatText5(v);
						continue outer;
					}
					state = 3;
					continue outer;
				case 3:
					attIdx = context.getAttribute("", "base2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 6;
						eatText6(v);
						continue outer;
					}
					state = 6;
					continue outer;
				case 6:
					attIdx = context.getAttribute("", "consecutive");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 9;
						eatText7(v);
						continue outer;
					}
					state = 9;
					continue outer;
				case 12:
					attIdx = context.getAttribute("", "gender1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 15;
						eatText8(v);
						continue outer;
					}
					state = 15;
					continue outer;
				}
				super.enterElement(___uri, ___local, ___qname, __atts);
				break;
			}
		}

		@Override
		public void handleText(final java.lang.String value)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				try {
					switch (state) {
					case 22:
						state = 23;
						eatText1(value);
						return;
					case 10:
						state = 11;
						eatText3(value);
						return;
					case 21:
						attIdx = context.getAttribute("", "possessive2");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 24;
							eatText1(v);
							continue outer;
						}
						state = 24;
						continue outer;
					case 7:
						state = 8;
						eatText7(value);
						return;
					case 18:
						attIdx = context.getAttribute("", "mwPos");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 21;
							eatText2(v);
							continue outer;
						}
						state = 21;
						continue outer;
					case 19:
						state = 20;
						eatText2(value);
						return;
					case 9:
						attIdx = context.getAttribute("", "construct1");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 12;
							eatText3(v);
							continue outer;
						}
						state = 12;
						continue outer;
					case 4:
						state = 5;
						eatText6(value);
						return;
					case 15:
						attIdx = context.getAttribute("", "gender2");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 18;
							eatText4(v);
							continue outer;
						}
						state = 18;
						continue outer;
					case 24:
						revertToParentFromText(value);
						return;
					case 0:
						attIdx = context.getAttribute("", "base1");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 3;
							eatText5(v);
							continue outer;
						}
						state = 3;
						continue outer;
					case 3:
						attIdx = context.getAttribute("", "base2");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 6;
							eatText6(v);
							continue outer;
						}
						state = 6;
						continue outer;
					case 13:
						state = 14;
						eatText8(value);
						return;
					case 6:
						attIdx = context.getAttribute("", "consecutive");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 9;
							eatText7(v);
							continue outer;
						}
						state = 9;
						continue outer;
					case 16:
						state = 17;
						eatText4(value);
						return;
					case 12:
						attIdx = context.getAttribute("", "gender1");
						if (attIdx >= 0) {
							final java.lang.String v = context
									.eatAttribute(attIdx);
							state = 15;
							eatText8(v);
							continue outer;
						}
						state = 15;
						continue outer;
					case 1:
						state = 2;
						eatText5(value);
						return;
					}
				} catch (java.lang.RuntimeException e) {
					handleUnexpectedTextException(value, e);
				}
				break;
			}
		}

		@Override
		public void leaveAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 23:
					if (("possessive2" == ___local) && ("" == ___uri)) {
						state = 24;
						return;
					}
					break;
				case 20:
					if (("mwPos" == ___local) && ("" == ___uri)) {
						state = 21;
						return;
					}
					break;
				case 21:
					attIdx = context.getAttribute("", "possessive2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 24;
						eatText1(v);
						continue outer;
					}
					state = 24;
					continue outer;
				case 18:
					attIdx = context.getAttribute("", "mwPos");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 21;
						eatText2(v);
						continue outer;
					}
					state = 21;
					continue outer;
				case 17:
					if (("gender2" == ___local) && ("" == ___uri)) {
						state = 18;
						return;
					}
					break;
				case 9:
					attIdx = context.getAttribute("", "construct1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 12;
						eatText3(v);
						continue outer;
					}
					state = 12;
					continue outer;
				case 5:
					if (("base2" == ___local) && ("" == ___uri)) {
						state = 6;
						return;
					}
					break;
				case 15:
					attIdx = context.getAttribute("", "gender2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 18;
						eatText4(v);
						continue outer;
					}
					state = 18;
					continue outer;
				case 24:
					revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
					return;
				case 11:
					if (("construct1" == ___local) && ("" == ___uri)) {
						state = 12;
						return;
					}
					break;
				case 0:
					attIdx = context.getAttribute("", "base1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 3;
						eatText5(v);
						continue outer;
					}
					state = 3;
					continue outer;
				case 3:
					attIdx = context.getAttribute("", "base2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 6;
						eatText6(v);
						continue outer;
					}
					state = 6;
					continue outer;
				case 6:
					attIdx = context.getAttribute("", "consecutive");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 9;
						eatText7(v);
						continue outer;
					}
					state = 9;
					continue outer;
				case 14:
					if (("gender1" == ___local) && ("" == ___uri)) {
						state = 15;
						return;
					}
					break;
				case 12:
					attIdx = context.getAttribute("", "gender1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 15;
						eatText8(v);
						continue outer;
					}
					state = 15;
					continue outer;
				case 8:
					if (("consecutive" == ___local) && ("" == ___uri)) {
						state = 9;
						return;
					}
					break;
				case 2:
					if (("base1" == ___local) && ("" == ___uri)) {
						state = 3;
						return;
					}
					break;
				}
				super.leaveAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public void leaveElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 21:
					attIdx = context.getAttribute("", "possessive2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 24;
						eatText1(v);
						continue outer;
					}
					state = 24;
					continue outer;
				case 18:
					attIdx = context.getAttribute("", "mwPos");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 21;
						eatText2(v);
						continue outer;
					}
					state = 21;
					continue outer;
				case 9:
					attIdx = context.getAttribute("", "construct1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 12;
						eatText3(v);
						continue outer;
					}
					state = 12;
					continue outer;
				case 15:
					attIdx = context.getAttribute("", "gender2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 18;
						eatText4(v);
						continue outer;
					}
					state = 18;
					continue outer;
				case 24:
					revertToParentFromLeaveElement(___uri, ___local, ___qname);
					return;
				case 0:
					attIdx = context.getAttribute("", "base1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 3;
						eatText5(v);
						continue outer;
					}
					state = 3;
					continue outer;
				case 3:
					attIdx = context.getAttribute("", "base2");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 6;
						eatText6(v);
						continue outer;
					}
					state = 6;
					continue outer;
				case 6:
					attIdx = context.getAttribute("", "consecutive");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 9;
						eatText7(v);
						continue outer;
					}
					state = 9;
					continue outer;
				case 12:
					attIdx = context.getAttribute("", "gender1");
					if (attIdx >= 0) {
						final java.lang.String v = context.eatAttribute(attIdx);
						state = 15;
						eatText8(v);
						continue outer;
					}
					state = 15;
					continue outer;
				}
				super.leaveElement(___uri, ___local, ___qname);
				break;
			}
		}

		@Override
		public java.lang.Object owner() {
			return mila.generated.impl.MultiWordLexiconTypeImpl.this;
		}

	}

	protected java.lang.String _Gender2;
	protected java.lang.String _Gender1;
	protected boolean has_Construct1;
	protected boolean _Construct1;
	protected boolean has_Consecutive;
	protected boolean _Consecutive;
	protected boolean has_Base2;
	protected boolean _Base2;
	protected java.lang.String _MwPos;
	protected boolean has_Possessive2;
	protected boolean _Possessive2;
	protected boolean has_Base1;
	protected boolean _Base1;
	public final static java.lang.Class version = (mila.generated.impl.JAXBVersion.class);

	private static com.sun.msv.grammar.Grammar schemaFragment;

	private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
		return (mila.generated.MultiWordLexiconType.class);
	}

	@Override
	public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
		if (schemaFragment == null) {
			schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
					.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
							+ "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
							+ "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
							+ "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
							+ "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
							+ "sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
							+ "sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000"
							+ "\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003sr\u0000\u0011java.l"
							+ "ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.Da"
							+ "taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
							+ "ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$"
							+ "com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.m"
							+ "sv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv."
							+ "datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
							+ ".xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/S"
							+ "tring;L\u0000\btypeNameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
							+ "xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
							+ "at\u0000\u0007booleansr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
							+ "Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePr"
							+ "ocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullS"
							+ "etExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPa"
							+ "ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~"
							+ "\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
							+ "Nameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv.grammar.NameCla"
							+ "ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005base1t\u0000\u0000sr\u00000com.sun.msv.grammar.Expression"
							+ "$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000-sq\u0000~\u0000\fppsq\u0000~\u0000"
							+ "\u000eq\u0000~\u0000\u0012pq\u0000~\u0000\u0016sq\u0000~\u0000\'t\u0000\u0005base2q\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012pq\u0000~\u0000"
							+ "\u0016sq\u0000~\u0000\'t\u0000\u000bconsecutiveq\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012pq\u0000~\u0000\u0016sq\u0000~"
							+ "\u0000\'t\u0000\nconstruct1q\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013ppsr\u0000)com"
							+ ".sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000"
							+ "\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithVal"
							+ "ueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Dat"
							+ "aTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFla"
							+ "gL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fc"
							+ "oncreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tface"
							+ "tNameq\u0000~\u0000\u001bxq\u0000~\u0000\u001aq\u0000~\u0000+t\u0000\nGenderTypeq\u0000~\u0000\"\u0000\u0000sr\u0000\"com.sun.msv.dat"
							+ "atype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.S"
							+ "tringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0005tokenq\u0000~\u0000\""
							+ "\u0001q\u0000~\u0000Ht\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010"
							+ "?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bfemininet\u0000\u0016masculine and femininet\u0000"
							+ "\tmasculinexq\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000Eq\u0000~\u0000+sq\u0000~\u0000\'t\u0000\u0007gender1q\u0000~\u0000+q\u0000~\u0000-sq"
							+ "\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012pq\u0000~\u0000=sq\u0000~\u0000\'t\u0000\u0007gender2q\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\fppsq\u0000"
							+ "~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013ppsq\u0000~\u0000>q\u0000~\u0000+t\u0000\u0007PosTypeq\u0000~\u0000\"\u0000\u0000q\u0000~\u0000Hq\u0000~\u0000Hq\u0000~\u0000J"
							+ "sq\u0000~\u0000Kw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\tt\u0000\u000bunspecifiedt\u0000\u000bprepositiont\u0000\finterject"
							+ "iont\u0000\u0005titlet\u0000\tadjectivet\u0000\u0004verbt\u0000\npropernamet\u0000\u0006adverbt\u0000\u0004nounx"
							+ "q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000\\q\u0000~\u0000+sq\u0000~\u0000\'t\u0000\u0005mwPosq\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq"
							+ "\u0000~\u0000\u0012pq\u0000~\u0000\u0016sq\u0000~\u0000\'t\u0000\u000bpossessive2q\u0000~\u0000+q\u0000~\u0000-sr\u0000\"com.sun.msv.gram"
							+ "mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
							+ "mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
							+ "essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006p"
							+ "arentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000f\u0001pq\u0000~\u0000;q\u0000~"
							+ "\u0000\nq\u0000~\u0000\rq\u0000~\u0000\u0006q\u0000~\u0000/q\u0000~\u0000\bq\u0000~\u0000\u0005q\u0000~\u0000\u000bq\u0000~\u0000Xq\u0000~\u00003q\u0000~\u0000jq\u0000~\u0000\tq\u0000~\u0000Tq\u0000~"
							+ "\u0000\u0007q\u0000~\u00007x"));
		}
		return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
				schemaFragment);
	}

	@Override
	public mila.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
			mila.generated.impl.runtime.UnmarshallingContext context) {
		return new mila.generated.impl.MultiWordLexiconTypeImpl.Unmarshaller(context);
	}

	@Override
	public java.lang.String getGender1() {
		if (_Gender1 == null) {
			return "masculine";
		} else {
			return _Gender1;
		}
	}

	@Override
	public java.lang.String getGender2() {
		if (_Gender2 == null) {
			return "masculine";
		} else {
			return _Gender2;
		}
	}

	@Override
	public java.lang.String getMwPos() {
		return _MwPos;
	}

	@Override
	public java.lang.Class getPrimaryInterface() {
		return (mila.generated.MultiWordLexiconType.class);
	}

	@Override
	public boolean isBase1() {
		if (!has_Base1) {
			return javax.xml.bind.DatatypeConverter
					.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl
							.installHook("false"));
		} else {
			return _Base1;
		}
	}

	@Override
	public boolean isBase2() {
		if (!has_Base2) {
			return javax.xml.bind.DatatypeConverter
					.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl
							.installHook("false"));
		} else {
			return _Base2;
		}
	}

	@Override
	public boolean isConsecutive() {
		if (!has_Consecutive) {
			return javax.xml.bind.DatatypeConverter
					.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl
							.installHook("true"));
		} else {
			return _Consecutive;
		}
	}

	@Override
	public boolean isConstruct1() {
		if (!has_Construct1) {
			return javax.xml.bind.DatatypeConverter
					.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl
							.installHook("false"));
		} else {
			return _Construct1;
		}
	}

	@Override
	public boolean isPossessive2() {
		if (!has_Possessive2) {
			return javax.xml.bind.DatatypeConverter
					.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl
							.installHook("false"));
		} else {
			return _Possessive2;
		}
	}

	@Override
	public void serializeAttributes(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		if (has_Base1) {
			context.startAttribute("", "base1");
			try {
				context.text(
						javax.xml.bind.DatatypeConverter.printBoolean(_Base1),
						"Base1");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (has_Base2) {
			context.startAttribute("", "base2");
			try {
				context.text(
						javax.xml.bind.DatatypeConverter.printBoolean(_Base2),
						"Base2");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (has_Consecutive) {
			context.startAttribute("", "consecutive");
			try {
				context.text(javax.xml.bind.DatatypeConverter
						.printBoolean(_Consecutive), "Consecutive");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (has_Construct1) {
			context.startAttribute("", "construct1");
			try {
				context.text(javax.xml.bind.DatatypeConverter
						.printBoolean(_Construct1), "Construct1");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_Gender1 != null) {
			context.startAttribute("", "gender1");
			try {
				context.text(_Gender1, "Gender1");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_Gender2 != null) {
			context.startAttribute("", "gender2");
			try {
				context.text(_Gender2, "Gender2");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (_MwPos != null) {
			context.startAttribute("", "mwPos");
			try {
				context.text(_MwPos, "MwPos");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
		if (has_Possessive2) {
			context.startAttribute("", "possessive2");
			try {
				context.text(javax.xml.bind.DatatypeConverter
						.printBoolean(_Possessive2), "Possessive2");
			} catch (java.lang.Exception e) {
				mila.generated.impl.runtime.Util.handlePrintConversionException(
						this, e, context);
			}
			context.endAttribute();
		}
	}

	@Override
	public void serializeBody(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
	}

	@Override
	public void serializeURIs(mila.generated.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
	}

	@Override
	public void setBase1(boolean value) {
		_Base1 = value;
		has_Base1 = true;
	}

	@Override
	public void setBase2(boolean value) {
		_Base2 = value;
		has_Base2 = true;
	}

	@Override
	public void setConsecutive(boolean value) {
		_Consecutive = value;
		has_Consecutive = true;
	}

	@Override
	public void setConstruct1(boolean value) {
		_Construct1 = value;
		has_Construct1 = true;
	}

	@Override
	public void setGender1(java.lang.String value) {
		_Gender1 = value;
	}

	@Override
	public void setGender2(java.lang.String value) {
		_Gender2 = value;
	}

	@Override
	public void setMwPos(java.lang.String value) {
		_MwPos = value;
	}

	@Override
	public void setPossessive2(boolean value) {
		_Possessive2 = value;
		has_Possessive2 = true;
	}

}
